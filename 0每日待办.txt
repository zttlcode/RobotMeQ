步长10，900数据
0.7266666666666667  ClassCNN
0.6866666666666666  Transformer
0.666  TimesNet
0.57 Autoformer
0.57 PatchTST

步长10，全数据， 24.6万 train  14.6万 test
accuracy:0.6543299846756343   Transformer
accuracy:0.6468585050229866   PatchTST
accuracy:0.622203303252171    ClassCNN
accuracy:0.6169793972416142   Autoformer

步长250，全数据   模型可能要改架构
accuracy:0.6690059530805982  PatchTST
accuracy:0.6534491222490337  Transformer
accuracy:0.6397936818524382  ClassCNN

步长500，全数据
accuracy:0.6687597127136797  PatchTST
accuracy:0.635214974729444  ClassCNN

效果太差，打算放弃模型创新，转而计算收益率，与传统策略对比
发现实际分类结果几乎都无效，直观原因是样本不均 nature_quant里记录了

改损失函数权重后
accuracy:0.6053523177509905  timesnet
模型预测1000次就买对了6次，一次没卖对，还是无法计算收益

均衡数据集后，原形毕露了
accuracy:0.449523998413328    ClassCNN
accuracy:0.43395477984926617  timesnet
accuracy:0.41937723125743753  Informer
虽然低，但均衡，能统计收益了


目标：收益率超越传统策略
思路：多变量时间序列分类，金融领域，传统指标过滤数据集，CNN提取多级别、多标的窗口特征
遇到问题：
    1、数据标注方案不完善
        1.2 买点占80%，连续多次买入，小波动多；
        1.3 样本不均
    2、现在只有思路创新，技术创新点不足
        2.1 标注方向
        2.2 模型方向

解决方案
    1.2 小波动多
        方案一：现有过滤基础上，加入其他论文方法，过滤小波动 （1量化.txt参考文献）
                                            我可以退一步，不追求极限抄底，区间买点就行，大波段
                                            现在的失误，是由于买入后macd区域没有按预期变化。只能靠过滤。买完柱子继续变短
                                            回测时，用日线macd相邻判断，每个策略指标过滤都要定制开发，这特征就完全不用价格和成交量了
        方案二：均线走平，是过滤掉波动了，但是对于回归策略来说，盘底也错过了
                盘底后起来又回撤，是最稳得买点，但这是趋势策略
               换个角度，底部盘整，买点出现，买了以后可能向上，也可能向下，模型学了这个底部特征没用，人是靠啥判断得？
               小级别，靠大级别，个股日线靠大盘指数。
               所以，剔除5分钟是防止底部刚涨就卖。但至少保留15分钟点位，大级别还是那三个。。
    20250121
    然后样本不均加样本，换特征、换策略、换市场试试，再简单找找别人的办法。
    然后模型优化简单看看，然后主要精力开始做多模型。
    2.2.2的混合模型是个没意思的事，走投无路了发论文用
    最好还是清楚各种主流技术的特性，把他们用到适合他们的地方。这样用它就有理由了，而不是盲目瞎试出来的

    担心大盘同样走势，个股有涨有跌模型无法学习，要不股票分题材训练？
不同题材给不同模型
 同样的大盘日线走势，有些在涨，有些在跌，让模型很矛盾，要么降低指数权重？
                                            怎么让模型知道，大盘指数这种形态时，涨的概率大？  学多了他会自己知道么？
                                            要不大盘指数单独走个CNN，做2分类，现在是上涨趋势还是下跌趋势？


最好的点位需要5分钟，只是日线等大级别识别不出特征。不如我就舍弃大级别，毕竟长期的可变因素太多，难以预测
每个步骤只做最正确的事情，或者有方案框架应对不同情况

重新梳理思路，不同的策略，不同级别，一定有最适合的场景
方法论应该是这样的，没有一个策略能适用所有风格、所有标的。因材施教

策略分为回归、趋势、套利
股票要么震荡，要么单边，没其他了。
回归适合震荡、周期。
趋势适合单边行情。
套利拼速度。

人无法做到完美，无法预测未来。我们只是在玩概率游戏。
我在传统指标的基础上，回测出交易点。
过滤交易点，进行标注。标注的最优结果，就是模型要抽取的特征。
特征可解释性：我知道要抽取的特征是过滤明显风险大的操作。
核心是2个：
    标注出最优结果
    模型容易抽取特征
标注时要考虑用什么模型，模型好不好学

回归类有一套方案
    任何市场，任何标的，喂进来，回测、标注、训练，就是最适合这个市场的策略。这就是用模型代替了一个市场内的老基金经理。
    回归类最完美策略就是macd+kdj，不能这样，同类策略也可以组合投票
    现在我做的一切，都是基于回归策略。不能想着用这一个策略解决所有问题，长线短线不同市场，这不可能。而且模型层面看，CNN不一定和他最搭配

趋势类有一套方案
    最完美是模糊
策略不止这些，日内交易是个不错的选择。但用的是波浪理论。如果我能做成一个框架，让模型自己识别现在适合什么类型的策略

# 分策略，run回测改为调用，每个策略有各自的回测、过滤标注、准备数据集，每个模块写成py 文件放预处理文件夹


macd+kdj就是回归，是网格，是滚动操作，是周期性，跟时间序列是亲戚
CNN能抽取的是macd+kdj的指标特征。这没毛病  也许回归的周期属性更适合时间序列模型，dlinear那种？
各级别的信号出现，各级别的指标就是有自己的特征，这也没毛病
我现在想要分钟级别的信号所处日线走势特征，CNN识别。这有毛病，需求错了，让狗学猫叫。
首先，日线走势可能挖出来特征，但绝对没用指标作特征直观。我现在正确率0.4，距离0.6差太多
第二，5分钟级别的变化，在日线图里反映不出来，15、30也不行，60还有一点可能，所以级别组合有问题，不该这么设计
第三，让大家做自己擅长的事。
    5分钟行不行，让15、30去判断，靠谱点
    30，再让60、日线判断，靠谱点，为啥？高级别能看出些变化
    所以特征应该这样组合，当然，也许分开训练效果更好
    如果5、15、30组合，那就是临近级别组合，那过滤时，就不能按日线数据过滤了，应该按bar过滤。相应的操作，也变成短线交易
    短线就不如长线么？并不是，根据实验，单级别收益率都差不多，我只要保证标注后收益率跟高就行。毕竟标注后收益就是我的天花板



我受了别人的诱惑，想让CNN找日线特征



    1.3 样本不均  （参考https://zhuanlan.zhihu.com/p/494220661）
        方案一：损失函数层面实验cost-sensitive，效果不佳
        方案二：删样本，效果提升（对应1.2方案二 缓解了小波动的连续买点）
                再尝试区间内加样本，让模型学区间
        方案三：模型层面用决策树 在2.2.3解决
        方案四：集成学习中bagging，把少的样本重复抽样，组成训练子集，给单个模型 在2.2.3解决

    2.2 模型方向
        2.2.1 基于目前单个CNN模型，持续优化，与时序模型比较     目前多级别数据合并6特征，一个CNN，有区别么？我看集成是为了防过拟合
                方案一：改数据集特征， 日线走势不够，正常人还得看指标
                        macd、KDJ、大盘成交量（日线小时成交量取消），这些数据重新组成数据集特征
                        （2019年那篇 CNN特征提取、后面的方法跟我差不多）
                方案二：改数据集？其他市场日线数据
                方案三：改训练？交叉验证
                方案四：模型架构层面，模型创新，模仿dlinear，优化个特别的CNN，实验效果好
                        思路：
                            1）不同特征组合的CNN模型： 如果你依然想保持每个特征的独立性，可以尝试设计一个多输入的CNN模型，
                                它可以同时处理这三个不同的特征（每个特征可以有自己独立的卷积层）。
                                通过这种方式，模型可以学会如何结合不同的时间尺度信息来判断股票走势，而不需要使用传统的集成学习方法。
                            2）残差?注意力？
                            3）我想识别趋势反转，相对位置信息？自注意力的位置编码，就是把位置信息做成形状相同的矩阵加到输入的矩阵，分绝对和相对
                        优势：目前实验结果有希望
                        劣势：时序官方数据集周期强，消融实验难赢，   抽窗口内序列特征的 时间上的规律不多

        2.2.2 混合模型
                参考：10、16
                （2022）A comprehensive review on multiple hybrid deep learning approaches for stock prediction
                    CNN。这个主要讲 CNN-LSTM。 输入信号（买卖信号），用卷积层提取特征，池化层降低kernel数，
                    flatten layer把所有特征转为单维向量，把单位向量作为输入传给LSTM层，
                    Fig6是流程图,Fig7是模型图，Fig8是算法示意图。
                    作者在结论总结了一下：LSTM and Hybrid LSTM 预测价格更好， CNN and Hybrid CNN预测趋势更好，
                    CNN-LSTM Hybrid适合资产组合，hybrid CNN and LSTM适合做日内高频
                LSTM能做分类吧？

        2.2.3 集成学习  优先
                优势：数据集特征加级别，加指标，对于一个CNN怕是太复杂了，也许投票真能解决预测错误问题，相当于二次过滤
                方案一：3个相同CNN，数据集特征相同，日线、小时线、大盘（对应1.3方案四 bagging）
                方案二：多个相同CNN，数据集特征不同——指标分开喂
                方案三：多个相同CNN，数据集特征不同——不同策略及其指标
                        王立新论文的 均线上穿下穿、突破支撑线阻力线、趋势线、布林带、MACD、模糊，他们带各自指标做特征，进CNN抽指标线特征
                            注意，回归类策略和趋势类策略可能犯冲
                方案四：对应1.3方案三 Boosting
                       模型：决策树 参考 https://blog.csdn.net/weixin_39807102/article/details/81912566
                                        lightGBM比XGboost更快更省内存     可以不看
                方案五：不同模型，cnn+lstm    多角度，多模型  不同模型解决不同问题。


创新点：
    1、思路创新，找别人代码复现，对比  + 传统！！！！！！！！！！！！
    2、样本不均，找相关论文的方法用！！！！！！！  搬别人的用
    4、CNN有道理的加东西，  改数据集特征  自注意力的位置编码  ！！！！！！！  1 试别人的
    5、搬别人的混合模型直接拿来用，效果好就行！！！！！！！！！
    6、集成学习的方案3不错  方案5不错  老师说没必要用集成学习那套，就按自己的想法混搭，各自训练后投票就行。先实验简单的

混模型、A+B已经被做烂了，做好的创新还是思路上的创新，认为这样可行，实践了发现可行
退一步讲，别人的方法解决了我的问题，也算创新

超参，数据，记录每次结果，避免随机变量
准确率至少0.6，
---------------------------------------------------------------------------------------


这种方法与传统金融策略做对比，投经济类期刊
一区期刊 Expert Systems With Applications
21发哪个期刊了，感觉很水
2019 有篇写作方式不错



下跌趋势的股票，默认是无法突破前高的，持有了下跌趋势的票，在股价接近前高时，先卖，再等低位接回
一个股票的趋势一旦反转，他不会直线一直涨（A股），等回撤买入。


akshare可以获取股东人数，可作为选股策略
什么题材都有故事，题材没用
主力吸收了一堆筹码，然后炒起来，卖给散户
只要主力没离场，这个股票总有大涨的机会
如果主力没来，这个股票就不需要关注
那我只要找到，主力来了，股票还没涨的，加入风投列表
然后风投的股票进入策略，等待买点出现，再等个卖点出现



数字币的期权，算概率也很不错

用期权进行策略实盘试验
当前价格100
预计5天后 会涨到110， 那我就买个5块，以100元（未来的低价）在5天后买，的期权，到了那天，真的超过110了，那我就行权，以100买入2手，马上以110价格卖出
                                                                  如果没有，那就损失个保证金
                                                                  期间我想止盈了，比如现在105，我可以卖给别人
预计5天后 会跌到90，  那我就买个5块，以100元（未来的高价）在5天后卖，的期权，到了那天，真跌了，我就在市场以90买个，马上以100卖给对方

所以，我可以只买10u，预测100u的波动。赢一次赚90u，输一次损失10u

合约在波动时有强制平仓风险，而期权不怕波动，损失固定，只要够小就可以
对冲，持有现货怕跌，买看跌期权，如果没跌，不行权，利润能盖过权利金。跌了，则对冲损失。
现货1000u1份，跌20%到800u，损失200u，要想对冲200u，则买1张看跌期权 1000u在5天后卖给对方，盈利为200u-1张的权利金（大概1%，也就是10u），即190u，
也就是说，1%，就能对冲，而且波动了百分之多少，就相当于盈利了多少倍杠杆。
如果1份价格过高，1%也很贵，这样可以买千分之一，原来赚190，现在只能转19u了，但花了1u。

他们现在买卖的，都是转卖的。比如 预计5天后到90，现在95，说明盈利5块了，那我卖5块，继续跌我才有的赚，不赚钱我5块全亏。
别看探索里转售的，直接买看涨期权，看跌期权，选日期，选心目中的价格，买个0.1张或更少即可。

币安的期权不用操作，赚了自动利润打到账户，赔了权利金直接扣掉。

期权不是100倍杠杆，
相当于自己开了个特殊杠杆
权利金就是当前和预期的价差，把价差补上，相当于自己买了个多倍合约，拥有了一个币，盈利就是1个币的价格相对期权价格的波动
这个价差越靠近当前价格，越正常，越离谱就越便宜（发生概率低，大概率扔钱）
所以，远期小概率时间收益最高，将近10倍收益
近期就是个普通的1倍，或者说一个币的波动利润

长期看涨的人远期看空对冲， 比如3800刀买了1个eth，就开空220刀1个eth  用5.7%的代价，换一个月的安心，当然涨过5.7%这样算没动，不然还要亏个5.7%作为买放心的代价

如果长期看空，那就买远期看涨对冲，比如1900刀一倍开空，270开涨，7%的代价，
总之在行权那天，如果涨破3800,270期权能弥补开空损失，但怕行权日之前涨超1900导致爆仓后又回落
                如果跌破3800，合约赚钱，但利润要大于270刀，才是真的赚

除了对冲以外，期权相当于一个防插针的合约
比如 当前3800，5刀明天看涨，到4000，才赚15刀
所以期权也有问题，就是权利金价格不稳定，200刀的利润，权利金应该是2刀  结果2刀利润只有7刀，降低了30倍